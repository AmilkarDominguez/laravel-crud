import os
def writeCreate(name, nameView):

    fileName = "../app/Http/Livewire/"+name+"/"+name+"Create.php"
    os.makedirs(os.path.dirname(fileName), exist_ok=True)
    file = open(fileName, "w")

    file.write("<?php")
    file.write("\n")
    file.write("namespace App\Http\Livewire\\"+name+";")
    file.write("\n")
    file.write("use App\Models\\"+name+";")
    file.write("use Livewire\Component;")
    file.write("use Illuminate\Support\Str;\n")
    file.write("use Jantinnerezo\LivewireAlert\LivewireAlert;\n")
    file.write("\n")
    file.write("class "+name+"Create extends Component\n")
    file.write("{\n")
    file.write("    use LivewireAlert;\n")
    file.write("    public $name;\n")
    file.write("    public $description;\n")
    file.write("    public $slug;\n")
    file.write("    public $state = \"ACTIVE\";\n")
    file.write("    public function render()\n")
    file.write("    {\n")
    file.write("        return view('livewire."+nameView+"."+nameView+"-create');\n")
    file.write("    }\n")
    file.write("    protected $rules = [\n")
    file.write("        'name' => 'required|max:100|min:2',\n")
    file.write("        'description' => 'nullable|max:100|min:2',\n")
    file.write("        'state' => 'required',\n")
    file.write("    ];\n")
    file.write("    public function submit()\n")
    file.write("    {\n")
    file.write("        $this->validate();\n")
    file.write("        "+name+"::create([\n")
    file.write("            'name' => $this->name,\n")
    file.write("            'description' => $this->description,\n")
    file.write("            'slug' => Str::uuid(),\n")
    file.write("            'state' => $this->state,\n")
    file.write("        ]);\n")
    file.write("        $this->cleanInputs();\n")
    file.write("        $this->confirm('Registro creado correctamente', [\n")
    file.write("            'icon' => 'success',\n")
    file.write("            'toast' => false,\n")
    file.write("            'position' => 'center',\n")
    file.write("            'showConfirmButton' => true,\n")
    file.write("            'showCancelButton' => false,\n")
    file.write("            'cancelButtonText' => 'Cancelar',\n")
    file.write("            'confirmButtonText' => 'Aceptar',\n")
    file.write("            'onConfirmed' => 'confirmed',\n")
    file.write("        ]);\n")
    file.write("    }\n")
    file.write("    public function cleanInputs()\n")
    file.write("    {\n")
    file.write("        $this->name = \"\";\n")
    file.write("        $this->description = \"\";\n")
    file.write("        $this->state = \"ACTIVE\";\n")
    file.write("    }\n")
    file.write("    protected $listeners = [\n")
    file.write("        'confirmed',\n")
    file.write("    ];\n")
    file.write("    public function confirmed()\n")
    file.write("    {\n")
    file.write("        return redirect()->route('"+nameView+".dashboard');\n")
    file.write("    }\n")
    file.write("}\n")
    file.close()
